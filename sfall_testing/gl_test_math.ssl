#include "test_utils.h"
#include "sfall.h"

procedure start begin

    display_msg("Testing math functions...");

    // Test sin function
    call assertFloat("sin(0)", sin(0), 0.0, 0.001);
    call assertFloat("sin(PI/2)", sin(1.5708), 1.0, 0.001);
    call assertFloat("sin(PI)", sin(3.1416), 0.0, 0.001);
    call assertFloat("sin(-PI/2)", sin(-1.5708), -1.0, 0.001);

    // Test cos function
    call assertFloat("cos(0)", cos(0), 1.0, 0.001);
    call assertFloat("cos(PI/2)", cos(1.5708), 0.0, 0.001);
    call assertFloat("cos(PI)", cos(3.1416), -1.0, 0.001);
    call assertFloat("cos(-PI)", cos(-3.1416), -1.0, 0.001);

    // Test tan function
    call assertFloat("tan(0)", tan(0), 0.0, 0.001);
    call assertFloat("tan(PI/4)", tan(0.7854), 1.0, 0.001);
    call assertFloat("tan(-PI/4)", tan(-0.7854), -1.0, 0.001);

    // Test arctan function (atan2: y, x)
    call assertFloat("arctan(0, 1)", arctan(0, 1), 0.0, 0.001);
    call assertFloat("arctan(1, 1)", arctan(1, 1), 0.7854, 0.001);
    call assertFloat("arctan(-1, 1)", arctan(-1, 1), -0.7854, 0.001);
    call assertFloat("arctan(1, 0)", arctan(1, 0), 1.5708, 0.001);

    // Test log function (natural logarithm)
    call assertFloat("log(1)", log(1), 0.0, 0.001);
    call assertFloat("log(e)", log(2.7183), 1.0, 0.001);
    call assertFloat("log(10)", log(10), 2.3026, 0.001);

    // Test exp function (e^x)
    call assertFloat("exponent(0)", exponent(0), 1.0, 0.001);
    call assertFloat("exponent(1)", exponent(1), 2.7183, 0.001);
    call assertFloat("exponent(2)", exponent(2), 7.3891, 0.001);
    call assertFloat("exponent(-1)", exponent(-1), 0.3679, 0.001);

    // Test ceil function
    call assertEquals("ceil(2.1)", ceil(2.1), 3);
    call assertEquals("ceil(2.0)", ceil(2.0), 2);
    call assertEquals("ceil(-2.1)", ceil(-2.1), -2);
    call assertEquals("ceil(-2.9)", ceil(-2.9), -2);

    // Test floor2 metarule
    call assertEquals("floor2(2.1)", floor2(2.1), 2);
    call assertEquals("floor2(2.9)", floor2(2.9), 2);
    call assertEquals("floor2(-2.1)", floor2(-2.1), -3);
    call assertEquals("floor2(-2.9)", floor2(-2.9), -3);

    // Test combinations
    call assertFloat("sin(arctan(1, 1))", sin(arctan(1, 1)), 0.7071, 0.001);
    call assertFloat("cos(arctan(1, 1))", cos(arctan(1, 1)), 0.7071, 0.001);
    call assertFloat("log(ceil(2.7))", log(ceil(2.7)), 1.0986, 0.001);
    call assertFloat("exponent(log(5))", exponent(log(5)), 5.0, 0.001);

    call report_test_results("math");
end